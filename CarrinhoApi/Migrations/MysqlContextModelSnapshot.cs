// <auto-generated />
using CarrinhoApi.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CarrinhoApi.Migrations
{
    [DbContext(typeof(MysqlContext))]
    partial class MysqlContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CarrinhoApi.Model.CarrinhoCabeca", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("CuponCode")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("cupon_code");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("carrinho_cabeca");
                });

            modelBuilder.Entity("CarrinhoApi.Model.CarrinhoDetalhe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<long>("CarrinhoCabecaId")
                        .HasColumnType("bigint");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint");

                    b.Property<long>("carrinho_cabecaId")
                        .HasColumnType("bigint");

                    b.Property<long>("product_id")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("carrinho_cabecaId");

                    b.HasIndex("product_id");

                    b.ToTable("carrinho_detalhe");
                });

            modelBuilder.Entity("CarrinhoApi.Model.Product", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("category_name");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("description");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("product");

                    b.HasData(
                        new
                        {
                            Id = 12L,
                            CategoryName = "Facas",
                            Description = "Faca de Açougueiro para churrasco",
                            ImageUrl = "https://facas/150.jpg",
                            Name = "Faca de Açougueiro",
                            Price = 10.00m
                        });
                });

            modelBuilder.Entity("CarrinhoApi.Model.CarrinhoDetalhe", b =>
                {
                    b.HasOne("CarrinhoApi.Model.CarrinhoCabeca", "CarrinhoCabeca")
                        .WithMany()
                        .HasForeignKey("carrinho_cabecaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarrinhoApi.Model.Product", "Product")
                        .WithMany()
                        .HasForeignKey("product_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarrinhoCabeca");

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
